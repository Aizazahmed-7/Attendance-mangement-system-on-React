{"ast":null,"code":"import axios from \"axios\";\nimport { success, request, fail, logout, register, failRegister, successUserList, failUserList, successGetUser } from \"../reducers/userReducer\";\nexport const Login = (email, password) => async dispatch => {\n  try {\n    dispatch(request());\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch(success(data));\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (err) {\n    const error = err.response && err.response.data.message ? err.response.data.message : err.message;\n    dispatch(fail(error));\n  }\n};\nexport const AdminLogin = (email, password) => async dispatch => {\n  try {\n    dispatch(request());\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/admin', {\n      email,\n      password\n    }, config);\n    dispatch(success(data));\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (err) {\n    const error = err.response && err.response.data.message ? err.response.data.message : err.message;\n    dispatch(fail(error));\n  }\n};\nexport const listUser = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.get('/api/users');\n    dispatch(successUserList(data));\n    localStorage.setItem('userList', JSON.stringify(data));\n  } catch (err) {\n    const error = err.response && err.response.data.message ? err.response.data.message : err.message;\n    dispatch(failUserList(error));\n  }\n};\nexport const getUserProfile = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`);\n    dispatch(successGetUser(data));\n    localStorage.setItem('User', JSON.stringify(data));\n  } catch (err) {\n    const error = err.response && err.response.data.message ? err.response.data.message : err.message;\n    dispatch(failUserList(error));\n  }\n};\nexport const Logout = () => async dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch(logout());\n};\nexport const Register = (name, email, password) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch(register(data));\n    dispatch(success(data));\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (err) {\n    const error = err.response && err.response.data.message ? err.response.data.message : err.message;\n    dispatch(failRegister(error));\n  }\n};","map":{"version":3,"names":["axios","success","request","fail","logout","register","failRegister","successUserList","failUserList","successGetUser","Login","email","password","dispatch","config","headers","data","post","localStorage","setItem","JSON","stringify","err","error","response","message","AdminLogin","listUser","get","getUserProfile","id","Logout","removeItem","Register","name"],"sources":["C:/Users/ak/Desktop/LMS/frontend/src/action/userActions.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { success,request,fail,logout,register,failRegister,successUserList,failUserList ,successGetUser} from \"../reducers/userReducer\"\r\n\r\n\r\n\r\nexport const Login = (email,password) => async (dispatch) => {\r\n    \r\n    try {\r\n\r\n        dispatch(request())\r\n        const config ={\r\n             headers:{\r\n                'Content-Type':'application/json'\r\n             }\r\n        }\r\n        const { data } = await axios.post('/api/users/login',{email,password},config)\r\n        dispatch(success(data))\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n      \r\n    } catch (err) {\r\n        const error = err.response && err.response.data.message ? err.response.data.message : err.message\r\n        dispatch(fail(error))\r\n    }\r\n\r\n  }\r\n\r\n\r\n  export const AdminLogin = (email,password) => async (dispatch) => {\r\n    \r\n    try {\r\n\r\n        dispatch(request())\r\n        const config ={\r\n             headers:{\r\n                'Content-Type':'application/json'\r\n             }\r\n        }\r\n        const { data } = await axios.post('/api/admin',{email,password},config)\r\n        \r\n\r\n        dispatch(success(data))\r\n\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n      \r\n     \r\n      \r\n    } catch (err) {\r\n        const error = err.response && err.response.data.message ? err.response.data.message : err.message\r\n        dispatch(fail(error))\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  export const listUser = () => async (dispatch) => {\r\n    \r\n    try {\r\n\r\n        const { data } = await axios.get('/api/users')\r\n        dispatch(successUserList(data))\r\n        localStorage.setItem('userList',JSON.stringify(data))\r\n      \r\n     \r\n      \r\n    } catch (err) {\r\n        const error = err.response && err.response.data.message ? err.response.data.message : err.message\r\n        dispatch(failUserList(error))\r\n    }\r\n\r\n  }\r\n\r\n\r\n  export const getUserProfile = (id) => async (dispatch) => {\r\n    \r\n    try {\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`)\r\n        dispatch(successGetUser(data))\r\n        localStorage.setItem('User',JSON.stringify(data))\r\n      \r\n    } catch (err) {\r\n        const error = err.response && err.response.data.message ? err.response.data.message : err.message\r\n        dispatch(failUserList(error))\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  export const Logout = () => async (dispatch) => {\r\n    \r\n    localStorage.removeItem('userInfo')\r\n    dispatch(logout());\r\n\r\n  }\r\n\r\n\r\n\r\n  export const Register = (name,email,password) => async (dispatch) => {\r\n    \r\n    try {\r\n\r\n        \r\n        const config ={\r\n             headers:{\r\n                'Content-Type':'application/json'\r\n             }\r\n        }\r\n        const { data } = await axios.post('/api/users',{name,email,password},config)\r\n        \r\n        dispatch(register(data))\r\n        dispatch(success(data))\r\n\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n      \r\n     \r\n      \r\n    } catch (err) {\r\n        const error = err.response && err.response.data.message ? err.response.data.message : err.message\r\n        dispatch(failRegister(error))\r\n    }\r\n\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module"}