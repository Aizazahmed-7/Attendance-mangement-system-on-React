{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ak\\\\Desktop\\\\LMS\\\\frontend\\\\src\\\\screens\\\\loginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { Container, Form, Button, Row, Col } from 'react-bootstrap';\nimport { Alert } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginScreen = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState(''); // const dispatch = useDispatch()\n  // const userLogin = useSelector(state=>(state.userLogin))\n  // const {loading,error,userInfo} =userLogin\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const redirect = location.search ? location.search.split('=')[1] : '/'; // useEffect(()=>{\n  //     if(userInfo){\n  //         navigate(redirect)\n  //     }\n  // },[userInfo])\n\n  const submitHandler = e => {\n    e.preventDefault(); // dispatch(Login(email,password))\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email Adress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"enter email\",\n          value: email,\n          onChange: e => {\n            setEmail(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"enter password\",\n          value: password,\n          onChange: e => {\n            setPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"my-3\",\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginScreen, \"b1EMKQolDAOMJWewTad1GSD7jCk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","Container","Form","Button","Row","Col","Alert","FormContainer","LoginScreen","email","setEmail","password","setPassword","navigate","location","redirect","search","split","submitHandler","e","preventDefault","target","value"],"sources":["C:/Users/ak/Desktop/LMS/frontend/src/screens/loginScreen.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport { Link,useNavigate,useLocation} from 'react-router-dom'\r\nimport {Container,Form,Button,Row,Col} from 'react-bootstrap'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nimport FormContainer from '../components/FormContainer'\r\n\r\n\r\nconst LoginScreen = () => {\r\n\r\nconst [email,setEmail] = useState('')\r\nconst [password,setPassword] = useState('')\r\n\r\n// const dispatch = useDispatch()\r\n\r\n// const userLogin = useSelector(state=>(state.userLogin))\r\n// const {loading,error,userInfo} =userLogin\r\n\r\nconst navigate = useNavigate();\r\nconst location = useLocation();\r\n\r\nconst redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n\r\n// useEffect(()=>{\r\n//     if(userInfo){\r\n//         navigate(redirect)\r\n//     }\r\n// },[userInfo])\r\n\r\nconst submitHandler = (e) => {\r\n    e.preventDefault()\r\n    // dispatch(Login(email,password))\r\n}\r\n\r\n\r\n  return (\r\n    <FormContainer>\r\n        <h1>Sign In</h1>\r\n        {/* {error && <Alert variant='danger'>{error}</Alert>} */}\r\n        <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='email'>\r\n                <Form.Label>Email Adress</Form.Label>\r\n                <Form.Control type='email' placeholder='enter email' value={email} onChange={(e)=>{setEmail(e.target.value)}}>\r\n\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='password'>\r\n                <Form.Label>Password </Form.Label>\r\n                <Form.Control type='password' placeholder='enter password' value={password} onChange={(e)=>{setPassword(e.target.value)}}>\r\n                    \r\n                </Form.Control>\r\n\r\n            </Form.Group>\r\n            <Form.Group><Button className='my-3' type='submit' variant='primary' >Sign In</Button></Form.Group>\r\n            \r\n        </Form>\r\n\r\n     \r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,IAAT,EAAcC,WAAd,EAA0BC,WAA1B,QAA4C,kBAA5C;AACA,SAAQC,SAAR,EAAkBC,IAAlB,EAAuBC,MAAvB,EAA8BC,GAA9B,EAAkCC,GAAlC,QAA4C,iBAA5C;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,OAAOC,aAAP,MAA0B,6BAA1B;;;AAGA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EAE1B,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBd,QAAQ,CAAC,EAAD,CAAjC;EACA,MAAM,CAACe,QAAD,EAAUC,WAAV,IAAyBhB,QAAQ,CAAC,EAAD,CAAvC,CAH0B,CAK1B;EAEA;EACA;;EAEA,MAAMiB,QAAQ,GAAGd,WAAW,EAA5B;EACA,MAAMe,QAAQ,GAAGd,WAAW,EAA5B;EAEA,MAAMe,QAAQ,GAAGD,QAAQ,CAACE,MAAT,GAAkBF,QAAQ,CAACE,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAlB,GAAkD,GAAnE,CAb0B,CAgB1B;EACA;EACA;EACA;EACA;;EAEA,MAAMC,aAAa,GAAIC,CAAD,IAAO;IACzBA,CAAC,CAACC,cAAF,GADyB,CAEzB;EACH,CAHD;;EAME,oBACE,QAAC,aAAD;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAGI,QAAC,IAAD;MAAM,QAAQ,EAAEF,aAAhB;MAAA,wBACI,QAAC,IAAD,CAAM,KAAN;QAAY,SAAS,EAAC,OAAtB;QAAA,wBACI,QAAC,IAAD,CAAM,KAAN;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,IAAD,CAAM,OAAN;UAAc,IAAI,EAAC,OAAnB;UAA2B,WAAW,EAAC,aAAvC;UAAqD,KAAK,EAAET,KAA5D;UAAmE,QAAQ,EAAGU,CAAD,IAAK;YAACT,QAAQ,CAACS,CAAC,CAACE,MAAF,CAASC,KAAV,CAAR;UAAyB;QAA5G;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAOI,QAAC,IAAD,CAAM,KAAN;QAAY,SAAS,EAAC,UAAtB;QAAA,wBACI,QAAC,IAAD,CAAM,KAAN;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,IAAD,CAAM,OAAN;UAAc,IAAI,EAAC,UAAnB;UAA8B,WAAW,EAAC,gBAA1C;UAA2D,KAAK,EAAEX,QAAlE;UAA4E,QAAQ,EAAGQ,CAAD,IAAK;YAACP,WAAW,CAACO,CAAC,CAACE,MAAF,CAASC,KAAV,CAAX;UAA4B;QAAxH;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAPJ,eAcI,QAAC,IAAD,CAAM,KAAN;QAAA,uBAAY,QAAC,MAAD;UAAQ,SAAS,EAAC,MAAlB;UAAyB,IAAI,EAAC,QAA9B;UAAuC,OAAO,EAAC,SAA/C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAZ;QAAA;QAAA;QAAA;MAAA,QAdJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD,CArDD;;GAAMd,W;UAUWT,W,EACAC,W;;;KAXXQ,W;AAuDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}