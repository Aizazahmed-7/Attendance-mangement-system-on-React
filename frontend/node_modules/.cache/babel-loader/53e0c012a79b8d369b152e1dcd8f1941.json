{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const userSlice = createSlice({\n  name: 'userLogin',\n  initialState: {},\n  reducers: {\n    request: (state, action) => {\n      return {\n        loading: true,\n        userInfo: {}\n      };\n    },\n    success: (state, action) => {\n      return {\n        loading: false,\n        userInfo: action.payload\n      };\n    },\n    fail: (state, action) => {\n      return {\n        loading: false,\n        error: action.payload,\n        userInfo: null\n      };\n    },\n    logout: (state, action) => {\n      return {};\n    }\n  }\n});\nexport const listUserSlice = createSlice({\n  name: 'usersList',\n  initialState: {},\n  reducers: {\n    requestUserList: (state, action) => {\n      return {\n        loading: true,\n        userList: {}\n      };\n    },\n    successUserList: (state, action) => {\n      return {\n        loading: false,\n        userList: action.payload\n      };\n    },\n    failUserList: (state, action) => {\n      return {\n        loading: false,\n        error: action.payload,\n        userList: null\n      };\n    },\n    logoutUserList: (state, action) => {\n      return {};\n    }\n  }\n});\nexport const userRegisterSlice = createSlice({\n  name: 'userRegister',\n  initialState: {},\n  reducers: {\n    register: (state, action) => {\n      return {\n        loading: false,\n        userInfo: action.payload\n      };\n    },\n    failRegister: (state, action) => {\n      return {\n        loading: false,\n        error: action.payload,\n        userInfo: null\n      };\n    }\n  }\n});\nexport const {\n  request,\n  success,\n  fail,\n  logout\n} = userSlice.actions;\nexport const {\n  failRegister,\n  register\n} = userRegisterSlice.actions;\nexport const {\n  requestUserList,\n  successUserList,\n  failUserList,\n  logoutUserList\n} = listUserSlice.actions;\nexport default userSlice;","map":{"version":3,"names":["createSlice","userSlice","name","initialState","reducers","request","state","action","loading","userInfo","success","payload","fail","error","logout","listUserSlice","requestUserList","userList","successUserList","failUserList","logoutUserList","userRegisterSlice","register","failRegister","actions"],"sources":["C:/Users/ak/Desktop/LMS/frontend/src/reducers/userReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n \r\nexport const userSlice = createSlice({\r\n  name: 'userLogin',\r\n  initialState: {\r\n    \r\n  },\r\n  reducers: {\r\n    request: (state, action) => {\r\n      return { loading: true, userInfo: {} }\r\n    },\r\n    success: (state, action) => {\r\n      return { loading: false, userInfo: action.payload }\r\n    },\r\n    fail: (state, action) => {\r\n      return { loading: false, error: action.payload ,userInfo:null}\r\n    },\r\n    logout: (state,action) => {\r\n\r\n        return({})\r\n    }\r\n  }\r\n})\r\n\r\n\r\nexport const listUserSlice = createSlice({\r\n  name: 'usersList',\r\n  initialState: {\r\n    \r\n  },\r\n  reducers: {\r\n    requestUserList: (state, action) => {\r\n      return { loading: true, userList: {} }\r\n    },\r\n    successUserList: (state, action) => {\r\n      return { loading: false, userList: action.payload }\r\n    },\r\n    failUserList: (state, action) => {\r\n      return { loading: false, error: action.payload ,userList:null}\r\n    },\r\n    logoutUserList: (state,action) => {\r\n\r\n        return({})\r\n    }\r\n  }\r\n})\r\n\r\n\r\nexport const userRegisterSlice = createSlice({\r\n  name: 'userRegister',\r\n  initialState: {\r\n    \r\n  },\r\n  reducers: {\r\n    register: (state, action) => {\r\n      return { loading: false, userInfo: action.payload }\r\n    },\r\n    failRegister: (state, action) => {\r\n      return { loading: false, error: action.payload ,userInfo:null}\r\n    }\r\n    \r\n  }\r\n})\r\n\r\n\r\n\r\n\r\nexport const {request, success, fail,logout} = userSlice.actions\r\nexport const { failRegister,register} = userRegisterSlice.actions\r\nexport const {requestUserList,successUserList,failUserList,logoutUserList} = listUserSlice.actions\r\n \r\nexport default userSlice"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACnCE,IAAI,EAAE,WAD6B;EAEnCC,YAAY,EAAE,EAFqB;EAKnCC,QAAQ,EAAE;IACRC,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1B,OAAO;QAAEC,OAAO,EAAE,IAAX;QAAiBC,QAAQ,EAAE;MAA3B,CAAP;IACD,CAHO;IAIRC,OAAO,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MAC1B,OAAO;QAAEC,OAAO,EAAE,KAAX;QAAkBC,QAAQ,EAAEF,MAAM,CAACI;MAAnC,CAAP;IACD,CANO;IAORC,IAAI,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;MACvB,OAAO;QAAEC,OAAO,EAAE,KAAX;QAAkBK,KAAK,EAAEN,MAAM,CAACI,OAAhC;QAAyCF,QAAQ,EAAC;MAAlD,CAAP;IACD,CATO;IAURK,MAAM,EAAE,CAACR,KAAD,EAAOC,MAAP,KAAkB;MAEtB,OAAO,EAAP;IACH;EAbO;AALyB,CAAD,CAA7B;AAuBP,OAAO,MAAMQ,aAAa,GAAGf,WAAW,CAAC;EACvCE,IAAI,EAAE,WADiC;EAEvCC,YAAY,EAAE,EAFyB;EAKvCC,QAAQ,EAAE;IACRY,eAAe,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAmB;MAClC,OAAO;QAAEC,OAAO,EAAE,IAAX;QAAiBS,QAAQ,EAAE;MAA3B,CAAP;IACD,CAHO;IAIRC,eAAe,EAAE,CAACZ,KAAD,EAAQC,MAAR,KAAmB;MAClC,OAAO;QAAEC,OAAO,EAAE,KAAX;QAAkBS,QAAQ,EAAEV,MAAM,CAACI;MAAnC,CAAP;IACD,CANO;IAORQ,YAAY,EAAE,CAACb,KAAD,EAAQC,MAAR,KAAmB;MAC/B,OAAO;QAAEC,OAAO,EAAE,KAAX;QAAkBK,KAAK,EAAEN,MAAM,CAACI,OAAhC;QAAyCM,QAAQ,EAAC;MAAlD,CAAP;IACD,CATO;IAURG,cAAc,EAAE,CAACd,KAAD,EAAOC,MAAP,KAAkB;MAE9B,OAAO,EAAP;IACH;EAbO;AAL6B,CAAD,CAAjC;AAuBP,OAAO,MAAMc,iBAAiB,GAAGrB,WAAW,CAAC;EAC3CE,IAAI,EAAE,cADqC;EAE3CC,YAAY,EAAE,EAF6B;EAK3CC,QAAQ,EAAE;IACRkB,QAAQ,EAAE,CAAChB,KAAD,EAAQC,MAAR,KAAmB;MAC3B,OAAO;QAAEC,OAAO,EAAE,KAAX;QAAkBC,QAAQ,EAAEF,MAAM,CAACI;MAAnC,CAAP;IACD,CAHO;IAIRY,YAAY,EAAE,CAACjB,KAAD,EAAQC,MAAR,KAAmB;MAC/B,OAAO;QAAEC,OAAO,EAAE,KAAX;QAAkBK,KAAK,EAAEN,MAAM,CAACI,OAAhC;QAAyCF,QAAQ,EAAC;MAAlD,CAAP;IACD;EANO;AALiC,CAAD,CAArC;AAmBP,OAAO,MAAM;EAACJ,OAAD;EAAUK,OAAV;EAAmBE,IAAnB;EAAwBE;AAAxB,IAAkCb,SAAS,CAACuB,OAAlD;AACP,OAAO,MAAM;EAAED,YAAF;EAAeD;AAAf,IAA2BD,iBAAiB,CAACG,OAAnD;AACP,OAAO,MAAM;EAACR,eAAD;EAAiBE,eAAjB;EAAiCC,YAAjC;EAA8CC;AAA9C,IAAgEL,aAAa,CAACS,OAApF;AAEP,eAAevB,SAAf"},"metadata":{},"sourceType":"module"}