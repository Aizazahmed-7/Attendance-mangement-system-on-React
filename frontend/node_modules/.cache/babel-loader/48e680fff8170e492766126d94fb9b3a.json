{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk'; // I still add this for my reference so I know thunk middleware is added\n\nimport userSlice, { userRegisterSlice } from './reducers/userReducer'; // const userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')): null\n\nconst store = configureStore({\n  reducer: {\n    userLogin: userSlice.reducer,\n    userRegister: userRegisterSlice.reducer\n  },\n  preloadedState: {\n    userLogin: {\n      userInfo: userInfoFromStorage\n    }\n  },\n  middleware: [thunk]\n});\nexport default store;","map":{"version":3,"names":["configureStore","thunk","userSlice","userRegisterSlice","store","reducer","userLogin","userRegister","preloadedState","userInfo","userInfoFromStorage","middleware"],"sources":["C:/Users/ak/Desktop/LMS/frontend/src/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\r\nimport thunk from 'redux-thunk' // I still add this for my reference so I know thunk middleware is added\r\nimport  userSlice, {userRegisterSlice } from './reducers/userReducer'\r\n \r\n\r\n\r\n// const userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')): null\r\n\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n\r\n        userLogin : userSlice.reducer,\r\n        userRegister: userRegisterSlice.reducer,\r\n         \r\n    },\r\n    preloadedState: {\r\n        userLogin:{userInfo:userInfoFromStorage}\r\n    },\r\n    middleware: [thunk],\r\n})\r\n \r\nexport default store"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAAgC;;AAChC,OAAQC,SAAR,IAAoBC,iBAApB,QAA6C,wBAA7C,C,CAIA;;AAIA,MAAMC,KAAK,GAAGJ,cAAc,CAAC;EACzBK,OAAO,EAAE;IAELC,SAAS,EAAGJ,SAAS,CAACG,OAFjB;IAGLE,YAAY,EAAEJ,iBAAiB,CAACE;EAH3B,CADgB;EAOzBG,cAAc,EAAE;IACZF,SAAS,EAAC;MAACG,QAAQ,EAACC;IAAV;EADE,CAPS;EAUzBC,UAAU,EAAE,CAACV,KAAD;AAVa,CAAD,CAA5B;AAaA,eAAeG,KAAf"},"metadata":{},"sourceType":"module"}